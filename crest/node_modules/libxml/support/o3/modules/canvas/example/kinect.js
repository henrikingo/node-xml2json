


var incomingpacket = [

0x80, 0x00, 0x00, 0x80, 0x03, 0x00, 0x0C, 0x02, 0x59, 0xEE, 0xFF, 0xFF, 0x00, 0x91, 0xC8, 0x04,
0x00, 0x12, 0x3C, 0x04, 0x00, 0xBF, 0x65, 0x02, 0x00, 0x29, 0x69, 0xFF, 0x00, 0xF0, 0x0C, 0xF1,
0x00, 0x77, 0xD9, 0xEF, 0x00, 0x4F, 0xC0, 0x03, 0x00, 0xE0, 0xAC, 0x08, 0x00, 0xE5, 0x0D, 0x05,
0x00, 0x31, 0xD0, 0x09, 0x00, 0x0A, 0x2D, 0x08, 0x00, 0x20, 0xAC, 0x0B, 0x00, 0x26, 0xD0, 0x13,
0x00, 0x18, 0x21, 0x11, 0x00, 0xDD, 0x51, 0x07, 0x00, 0x43, 0xBF, 0x00, 0x00, 0x2B, 0xA5, 0xFE,
0x00, 0x73, 0x3E, 0xFC, 0x00, 0xCC, 0xA2, 0xFE, 0x00, 0x0F, 0x3C, 0xF8, 0x00, 0x83, 0xF5, 0xF4,
0x00, 0x93, 0xD9, 0xF8, 0x00, 0x46, 0x89, 0xF2, 0x00, 0xB9, 0x6B, 0xF4, 0x00, 0x5C, 0x5D, 0xFB,
0x00, 0x35, 0x27, 0xF9, 0x00, 0xEC, 0x56, 0xFC, 0x00, 0x0B, 0xF5, 0xFF, 0x00, 0x83, 0xD2, 0x00,
0x00, 0x23, 0x7C, 0xFF, 0x00, 0x2D, 0x1B, 0x02, 0x00, 0x82, 0x46, 0x05, 0x00, 0x0A, 0xE7, 0x02,
0x00, 0x68, 0x1F, 0x02, 0x00, 0xA6, 0x1F, 0xFA, 0x00, 0x05, 0xE0, 0xEC, 0x00, 0x1E, 0xA2, 0xF7,
0x00, 0xFD, 0xC0, 0x08, 0x00, 0xF6, 0x65, 0x06, 0x00, 0xEE, 0x92, 0x06, 0x00, 0x19, 0x2E, 0x0A,
0x00, 0xE6, 0x38, 0x08, 0x00, 0xE3, 0xAF, 0x0F, 0x00, 0x4E, 0x2F, 0x14, 0x00, 0x6A, 0xC1, 0x0D,
0x00, 0x26, 0x8B, 0x03, 0x00, 0x9C, 0x34, 0x00, 0x00, 0xC5, 0x2A, 0xFD, 0x00, 0x2F, 0x42, 0xFD,
0x00, 0x22, 0x49, 0xFD, 0x00, 0xD0, 0x0B, 0xF5, 0x00, 0x40, 0xFE, 0xF6, 0x00, 0x4B, 0x2F, 0xF7,
0x00, 0x7E, 0x2F, 0xF1, 0x00, 0x40, 0x59, 0xF8, 0x00, 0x5F, 0xAE, 0xFA, 0x00, 0x2E, 0x9A, 0xF9,
0x00, 0x25, 0x4A, 0xFE, 0x00, 0x53, 0x75, 0x00, 0x00, 0x4E, 0x44, 0x00, 0x00, 0x84, 0xFB, 0xFF,
0x00, 0x0F, 0x45, 0x04, 0x00, 0x70, 0x80, 0x04, 0x00, 0x8C, 0x52, 0x02, 0x00, 0xF7, 0x9A, 0x00,
0x00, 0x30, 0x26, 0xF3, 0x00, 0x9B, 0x06, 0xEE, 0x00, 0x6B, 0xC2, 0x00, 0x00, 0x56, 0x88, 0x09,
0x00, 0x1E, 0x1D, 0x05, 0x00, 0x3B, 0xD6, 0x08, 0x00, 0x8F, 0xF7, 0x08, 0x00, 0xF8, 0x6A, 0x0A,
0x00, 0xEC, 0xE8, 0x12, 0x00, 0x16, 0x6D, 0x12, 0x00, 0x94, 0x4B, 0x09, 0x00, 0xBF, 0x46, 0x01,
0x00, 0xC5, 0x46, 0xFF, 0x00, 0x1A, 0x48, 0xFC, 0x00, 0x12, 0x6F, 0xFE, 0x00, 0xC6, 0x89, 0xF9,
0x00, 0x96, 0x6C, 0xF4, 0x00, 0x97, 0xDD, 0xF8, 0x00, 0xAC, 0xC1, 0xF3, 0x00, 0x24, 0xF9, 0xF2,
0x00, 0xE2, 0xE5, 0xFA, 0x00, 0x5E, 0x3F, 0xF9, 0x00, 0xB5, 0x96, 0xFB, 0x00, 0xA2, 0x8D, 0xFF,
0x00, 0x43, 0x8E, 0x00, 0x00, 0x5E, 0xE4, 0xFF, 0x00, 0x6A, 0xA3, 0x01, 0x00, 0x91, 0x3A, 0x05,
0x00, 0x8B, 0x33, 0x03, 0x00, 0x12, 0x4E, 0x02, 0x00, 0x69, 0x6B, 0xFC, 0x00, 0xA8, 0xBC, 0xED,
0x00, 0x67, 0x6A, 0xF4, 0x00, 0x48, 0x72, 0x07, 0x00, 0xE5, 0x80, 0x07, 0x00, 0xBF, 0xA4, 0x05,
0x00, 0xCE, 0x28, 0x0A, 0x00, 0x77, 0x49, 0x08, 0x00, 0x20, 0xE1, 0x0D, 0x00, 0x9C, 0x31, 0x14,
0x00, 0xDA, 0x6B, 0x0F, 0x00, 0x54, 0xBD, 0x04, 0x00, 0x14, 0x76, 0x00, 0x00, 0xF3, 0xD4, 0xFD,
0x00, 0xA8, 0x94, 0xFC, 0x00, 0x27, 0x1A, 0xFE, 0x00, 0xB5, 0x14, 0xF6, 0x00, 0x3B, 0xDE, 0xF5,
0x00, 0x2C, 0x06, 0xF8, 0x00, 0x86, 0x52, 0xF1, 0x00, 0xBB, 0xDF, 0xF6, 0x00, 0x31, 0x39, 0xFB,
0x00, 0x00, 0x26, 0xF9, 0x00, 0xFD, 0xAB, 0xFD, 0x00, 0xC4, 0x4B, 0x00, 0x00, 0xCB, 0x66, 0x00,
0x00, 0xEC, 0xD6, 0xFF, 0x00, 0xC3, 0x98, 0x03, 0x00, 0x78, 0xCD, 0x04, 0x00, 0x18, 0x53, 0x02,
0x00, 0x70, 0xAE, 0x01, 0x00, 0xC6, 0xC4, 0xF5, 0x00, 0x7A, 0x86, 0xEC]

	function GetInt(  byteoffset)
	{
		return (incomingpacket[byteoffset] << 24) + (incomingpacket[byteoffset+1] << 16) + (incomingpacket[byteoffset+2] << 8) + (incomingpacket[byteoffset+3] << 0);
//		return (incomingpacket[byteoffset+3] << 24) + (incomingpacket[byteoffset+2] << 16) + (incomingpacket[byteoffset+1] << 8) + (incomingpacket[byteoffset+0] << 0);
	};

	function GetShort( byteoffset)
	{
		var v = (incomingpacket[byteoffset+1] << 8) + (incomingpacket[byteoffset+0]);
		if(incomingpacket[byteoffset+2]>0) return -v;
		return v;
	};
	function GetShortRev( byteoffset)
	{
		var v = (incomingpacket[byteoffset+0] << 8) + (incomingpacket[byteoffset+1]);
		if(incomingpacket[byteoffset+2]>0) return -v;
		return v;
	};

	try
{
	var canvasFactory = require('../index.js')
	var http = require('http');

	

	http.createServer(
		function (req, res) 
		{
			if (req.url != "/") return;
			xsize = 800;
			ysize = 800;
			var ctx1 = canvasFactory(xsize,ysize, "argb");
	 
	 
			for (var off = 0;off<4;off++)
			{
				yoff = off*100;
				ctx1.beginPath();
				ctx1.strokeStyle ="rgb(255,0,0)";
				ctx1.moveTo(0,100+yoff);
				for (var j  =0;j<120;j++)
				{
					var y = GetShort((j*4)+13+off)*50/(32768*2);
					console.log(y)
					ctx1.lineTo(j*6 , 100 +yoff+ y);
				}
				ctx1.stroke();
			};
			
			ctx1.strokeStyle = "rgba(0,0,0,0.5)";
			ctx1.beginPath();
			for (var j  =0;j<120;j+=4)
			{
				
				ctx1.moveTo(j*6 , 0 );
				ctx1.lineTo(j*6 , 800 );
			}
			ctx1.stroke();
			
			ctx1.font = "bold 15px arial";
			ctx1.strokeStyle = "white";
			ctx1.fillStyle = "rgb(0,0,0)";
			ctx1.lineWidth = 4;
			ctx1.strokeText("o3-canvas xbox kinect audio packet data plot",20, 20);
			ctx1.fillText("o3-canvas xbox kinect audio packet data plot",20, 20);

			var buf = ctx1.pngBuffer();
			
			res.writeHead(200, {'Content-Type': 'text/html'});
			res.end('<img alt="Embedded Image" src="data:image/png;base64,'+buf.toBase64()+'">' );
		}
	).listen(4000, "127.0.0.1");

	console.log('Server running at http://127.0.0.1:4000/');
}
catch (e)
{
	console.log(e.message);
}