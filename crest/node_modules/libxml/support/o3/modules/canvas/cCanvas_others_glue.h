#ifdef O3_WITH_GLUE
#pragma warning( disable : 4100)
#pragma warning( disable : 4189)
namespace o3 {


Trait* cImage_CanvasGradient::select()
{
   return clsTraits();
}

Trait* cImage_CanvasGradient::clsTraits()
{
      static Trait TRAITS[] = {
         {      0,      Trait::TYPE_BEGIN,      "cImage_CanvasGradient",0,                    0,              0,      cScr::clsTraits()  },
         {      0,      Trait::TYPE_FUN,        "cImage_CanvasGradient","addColorStop",       clsInvoke,      0,      0                  },
         {      0,      Trait::TYPE_END,        "cImage_CanvasGradient",0,                    0,              0,      0                  },
      };

      return TRAITS;
}

Trait* cImage_CanvasGradient::extTraits()
{
      static Trait TRAITS[] = {
         {      0,      Trait::TYPE_BEGIN,      "cImage_CanvasGradient",0,                    0,              0,      0                  },
         {      0,      Trait::TYPE_END,        "cImage_CanvasGradient",0,                    0,              0,      0                  },
      };

      return TRAITS;
}

siEx cImage_CanvasGradient::clsInvoke(iScr* pthis, iCtx* ctx, int index, int argc,
           const Var* argv, Var* rval)
{
      siEx ex;
      cImage_CanvasGradient* pthis1 = (cImage_CanvasGradient*) pthis;

      switch(index) {
         case 0:
            if (argc != 2)
               return o3_new(cEx)("Invalid argument count. ( addColorStop )");
            pthis1->addColorStop(argv[0].toDouble(),argv[1].toStr());
            break;
      }
      return ex;
}

siEx cImage_CanvasGradient::extInvoke(iScr* pthis, iCtx* ctx, int index, int argc,
           const Var* argv, Var* rval)
{
      siEx ex;
      return ex;
}

}
#endif
#pragma warning(default : 4100)
#pragma warning(default : 4189)
#ifdef O3_WITH_GLUE
#pragma warning( disable : 4100)
#pragma warning( disable : 4189)
namespace o3 {


Trait* cImage_CanvasPattern::select()
{
   return clsTraits();
}

Trait* cImage_CanvasPattern::clsTraits()
{
      static Trait TRAITS[] = {
         {      0,      Trait::TYPE_BEGIN,      "cImage_CanvasPattern",0,                    0,              0,      cScr::clsTraits()  },
         {      0,      Trait::TYPE_END,        "cImage_CanvasPattern",0,                    0,              0,      0                  },
      };

      return TRAITS;
}

Trait* cImage_CanvasPattern::extTraits()
{
      static Trait TRAITS[] = {
         {      0,      Trait::TYPE_BEGIN,      "cImage_CanvasPattern",0,                    0,              0,      0                  },
         {      0,      Trait::TYPE_END,        "cImage_CanvasPattern",0,                    0,              0,      0                  },
      };

      return TRAITS;
}

siEx cImage_CanvasPattern::clsInvoke(iScr* pthis, iCtx* ctx, int index, int argc,
           const Var* argv, Var* rval)
{
      siEx ex;
      return ex;
}

siEx cImage_CanvasPattern::extInvoke(iScr* pthis, iCtx* ctx, int index, int argc,
           const Var* argv, Var* rval)
{
      siEx ex;
      return ex;
}

}
#endif
#pragma warning(default : 4100)
#pragma warning(default : 4189)
#ifdef O3_WITH_GLUE
#pragma warning( disable : 4100)
#pragma warning( disable : 4189)
namespace o3 {


Trait* cImage_TextMetrics::select()
{
   return clsTraits();
}

Trait* cImage_TextMetrics::clsTraits()
{
      static Trait TRAITS[] = {
         {      0,      Trait::TYPE_BEGIN,      "cImage_TextMetrics", 0,                    0,              0,      cScr::clsTraits()  },
         {      0,      Trait::TYPE_GET,        "cImage_TextMetrics", "width",              clsInvoke,      0,      0                  },
         {      0,      Trait::TYPE_END,        "cImage_TextMetrics", 0,                    0,              0,      0                  },
      };

      return TRAITS;
}

Trait* cImage_TextMetrics::extTraits()
{
      static Trait TRAITS[] = {
         {      0,      Trait::TYPE_BEGIN,      "cImage_TextMetrics", 0,                    0,              0,      0                  },
         {      0,      Trait::TYPE_END,        "cImage_TextMetrics", 0,                    0,              0,      0                  },
      };

      return TRAITS;
}

siEx cImage_TextMetrics::clsInvoke(iScr* pthis, iCtx* ctx, int index, int argc,
           const Var* argv, Var* rval)
{
      siEx ex;
      cImage_TextMetrics* pthis1 = (cImage_TextMetrics*) pthis;

      switch(index) {
         case 0:
            if (argc != 0)
               return o3_new(cEx)("Invalid argument count. ( width )");
            *rval = pthis1->width();
            break;
      }
      return ex;
}

siEx cImage_TextMetrics::extInvoke(iScr* pthis, iCtx* ctx, int index, int argc,
           const Var* argv, Var* rval)
{
      siEx ex;
      return ex;
}

}
#endif
#pragma warning(default : 4100)
#pragma warning(default : 4189)
#ifdef O3_WITH_GLUE
#pragma warning( disable : 4100)
#pragma warning( disable : 4189)
namespace o3 {


Trait* cImage_CanvasPixelArray::select()
{
   return clsTraits();
}

Trait* cImage_CanvasPixelArray::clsTraits()
{
      static Trait TRAITS[] = {
         {      0,      Trait::TYPE_BEGIN,      "cImage_CanvasPixelArray",0,                    0,              0,      cScr::clsTraits()  },
         {      0,      Trait::TYPE_FUN,        "cImage_CanvasPixelArray","__query__",          clsInvoke,      0,      0                  },
         {      1,      Trait::TYPE_FUN,        "cImage_CanvasPixelArray","__getter__",         clsInvoke,      1,      0                  },
         {      2,      Trait::TYPE_GET,        "cImage_CanvasPixelArray","length",             clsInvoke,      2,      0                  },
         {      0,      Trait::TYPE_END,        "cImage_CanvasPixelArray",0,                    0,              0,      0                  },
      };

      return TRAITS;
}

Trait* cImage_CanvasPixelArray::extTraits()
{
      static Trait TRAITS[] = {
         {      0,      Trait::TYPE_BEGIN,      "cImage_CanvasPixelArray",0,                    0,              0,      0                  },
         {      0,      Trait::TYPE_END,        "cImage_CanvasPixelArray",0,                    0,              0,      0                  },
      };

      return TRAITS;
}

siEx cImage_CanvasPixelArray::clsInvoke(iScr* pthis, iCtx* ctx, int index, int argc,
           const Var* argv, Var* rval)
{
      siEx ex;
      cImage_CanvasPixelArray* pthis1 = (cImage_CanvasPixelArray*) pthis;

      switch(index) {
         case 0:
            if (argc != 1)
               return o3_new(cEx)("Invalid argument count. ( __query__ )");
            *rval = pthis1->__query__(argv[0].toInt32());
            break;
         case 1:
            if (argc != 1)
               return o3_new(cEx)("Invalid argument count. ( __getter__ )");
            *rval = pthis1->__getter__(ctx,argv[0].toInt32(),&ex);
            break;
         case 2:
            if (argc != 0)
               return o3_new(cEx)("Invalid argument count. ( length )");
            *rval = pthis1->length();
            break;
      }
      return ex;
}

siEx cImage_CanvasPixelArray::extInvoke(iScr* pthis, iCtx* ctx, int index, int argc,
           const Var* argv, Var* rval)
{
      siEx ex;
      return ex;
}

}
#endif
#pragma warning(default : 4100)
#pragma warning(default : 4189)
#ifdef O3_WITH_GLUE
#pragma warning( disable : 4100)
#pragma warning( disable : 4189)
namespace o3 {


Trait* cImage_ImageData::select()
{
   return clsTraits();
}

Trait* cImage_ImageData::clsTraits()
{
      static Trait TRAITS[] = {
         {      0,      Trait::TYPE_BEGIN,      "cImage_ImageData",   0,                    0,              0,      cScr::clsTraits()  },
         {      0,      Trait::TYPE_GET,        "cImage_ImageData",   "width",              clsInvoke,      0,      0                  },
         {      1,      Trait::TYPE_GET,        "cImage_ImageData",   "height",             clsInvoke,      1,      0                  },
         {      2,      Trait::TYPE_GET,        "cImage_ImageData",   "data",               clsInvoke,      2,      0                  },
         {      0,      Trait::TYPE_END,        "cImage_ImageData",   0,                    0,              0,      0                  },
      };

      return TRAITS;
}

Trait* cImage_ImageData::extTraits()
{
      static Trait TRAITS[] = {
         {      0,      Trait::TYPE_BEGIN,      "cImage_ImageData",   0,                    0,              0,      0                  },
         {      0,      Trait::TYPE_END,        "cImage_ImageData",   0,                    0,              0,      0                  },
      };

      return TRAITS;
}

siEx cImage_ImageData::clsInvoke(iScr* pthis, iCtx* ctx, int index, int argc,
           const Var* argv, Var* rval)
{
      siEx ex;
      cImage_ImageData* pthis1 = (cImage_ImageData*) pthis;

      switch(index) {
         case 0:
            if (argc != 0)
               return o3_new(cEx)("Invalid argument count. ( width )");
            *rval = pthis1->width();
            break;
         case 1:
            if (argc != 0)
               return o3_new(cEx)("Invalid argument count. ( height )");
            *rval = pthis1->height();
            break;
         case 2:
            if (argc != 0)
               return o3_new(cEx)("Invalid argument count. ( data )");
            *rval = pthis1->data();
            break;
      }
      return ex;
}

siEx cImage_ImageData::extInvoke(iScr* pthis, iCtx* ctx, int index, int argc,
           const Var* argv, Var* rval)
{
      siEx ex;
      return ex;
}

}
#endif
#pragma warning(default : 4100)
#pragma warning(default : 4189)
