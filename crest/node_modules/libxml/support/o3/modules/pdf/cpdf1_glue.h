#ifdef O3_WITH_GLUE
#pragma warning( disable : 4100)
#pragma warning( disable : 4189)
namespace o3 {


Trait* cPdf1_Page::select()
{
   return clsTraits();
}

Trait* cPdf1_Page::clsTraits()
{
      static Trait TRAITS[] = {
         {      0,      Trait::TYPE_BEGIN,      "cPdf1_Page",         0,                    0,              0,      cScr::clsTraits()  },
         {      0,      Trait::TYPE_END,        "cPdf1_Page",         0,                    0,              0,      0                  },
      };

      return TRAITS;
}

Trait* cPdf1_Page::extTraits()
{
      static Trait TRAITS[] = {
         {      0,      Trait::TYPE_BEGIN,      "cPdf1_Page",         0,                    0,              0,      0                  },
         {      0,      Trait::TYPE_END,        "cPdf1_Page",         0,                    0,              0,      0                  },
      };

      return TRAITS;
}

siEx cPdf1_Page::clsInvoke(iScr* pthis, iCtx* ctx, int index, int argc,
           const Var* argv, Var* rval)
{
      siEx ex;
      return ex;
}

siEx cPdf1_Page::extInvoke(iScr* pthis, iCtx* ctx, int index, int argc,
           const Var* argv, Var* rval)
{
      siEx ex;
      return ex;
}

}
#endif
#pragma warning(default : 4100)
#pragma warning(default : 4189)
#ifdef O3_WITH_GLUE
#pragma warning( disable : 4100)
#pragma warning( disable : 4189)
namespace o3 {


Trait* cPdf1::select()
{
   return clsTraits();
}

Trait* cPdf1::clsTraits()
{
      static Trait TRAITS[] = {
         {      0,      Trait::TYPE_BEGIN,      "cPdf1",              0,                    0,              0,      cScr::clsTraits()  },
         {      0,      Trait::TYPE_FUN,        "cPdf1",              "AddImage",           clsInvoke,      0,      0                  },
         {      1,      Trait::TYPE_FUN,        "cPdf1",              "PlaceImage",         clsInvoke,      1,      0                  },
         {      2,      Trait::TYPE_FUN,        "cPdf1",              "AddPage",            clsInvoke,      2,      0                  },
         {      3,      Trait::TYPE_FUN,        "cPdf1",              "SetCurrentPage",     clsInvoke,      3,      0                  },
         {      4,      Trait::TYPE_FUN,        "cPdf1",              "SetMetadata",        clsInvoke,      4,      0                  },
         {      5,      Trait::TYPE_FUN,        "cPdf1",              "Write",              clsInvoke,      5,      0                  },
         {      0,      Trait::TYPE_END,        "cPdf1",              0,                    0,              0,      0                  },
      };

      return TRAITS;
}

Trait* cPdf1::extTraits()
{
      static Trait TRAITS[] = {
         {      0,      Trait::TYPE_BEGIN,      "cPdf1",              0,                    0,              0,      0                  },
         {      0,      Trait::TYPE_FUN,        "cO3",                "pdf",                extInvoke,      0,      0                  },
         {      0,      Trait::TYPE_END,        "cPdf1",              0,                    0,              0,      0                  },
      };

      return TRAITS;
}

siEx cPdf1::clsInvoke(iScr* pthis, iCtx* ctx, int index, int argc,
           const Var* argv, Var* rval)
{
      siEx ex;
      cPdf1* pthis1 = (cPdf1*) pthis;

      switch(index) {
         case 0:
            if (argc != 1)
               return o3_new(cEx)("Invalid argument count. ( AddImage )");
            *rval = pthis1->AddImage(argv[0].toScr());
            break;
         case 1:
            if (argc != 5)
               return o3_new(cEx)("Invalid argument count. ( PlaceImage )");
            pthis1->PlaceImage(argv[0].toInt32(),argv[1].toDouble(),argv[2].toDouble(),argv[3].toDouble(),argv[4].toDouble());
            break;
         case 2:
            if (argc != 2)
               return o3_new(cEx)("Invalid argument count. ( AddPage )");
            *rval = pthis1->AddPage(argv[0].toDouble(),argv[1].toDouble());
            break;
         case 3:
            if (argc != 1)
               return o3_new(cEx)("Invalid argument count. ( SetCurrentPage )");
            pthis1->SetCurrentPage(argv[0].toInt32());
            break;
         case 4:
            if (argc != 1)
               return o3_new(cEx)("Invalid argument count. ( SetMetadata )");
            pthis1->SetMetadata(argv[0].toStr());
            break;
         case 5:
            if (argc != 1)
               return o3_new(cEx)("Invalid argument count. ( Write )");
            *rval = pthis1->Write(siFs (argv[0].toScr()),&ex);
            break;
      }
      return ex;
}

siEx cPdf1::extInvoke(iScr* pthis, iCtx* ctx, int index, int argc,
           const Var* argv, Var* rval)
{
      siEx ex;
      cPdf1* pthis1 = (cPdf1*) pthis;

      switch(index) {
         case 0:
            if (argc != 0)
               return o3_new(cEx)("Invalid argument count. ( pdf )");
            *rval = pthis1->pdf();
            break;
      }
      return ex;
}

}
#endif
#pragma warning(default : 4100)
#pragma warning(default : 4189)
